/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: SketchSupreme (https://sketchfab.com/sketchsupreme)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/spider-man-fortnite-chapter-2-season-1-bp-skin-d4dcc913d1ac4982a44573acdf138c55
title: Spider-Man | Fortnite Chapter 2 Season 1 BP Skin
*/

import * as THREE from 'three'
import React, {useRef} from 'react'
import {useGLTF} from '@react-three/drei'
import {GLTF} from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_158: THREE.SkinnedMesh
    Object_159: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    M_MED_Parallel_Comic_Body: THREE.MeshStandardMaterial
    M_MED_Parallel_Comic_Head: THREE.MeshStandardMaterial
  }
}


const PATH_TO_MODEL = 'http://127.0.0.1:4321/spiderman/scene.gltf'

export default function Spiderman({...props}: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const {nodes, materials} = useGLTF(PATH_TO_MODEL) as GLTFResult
  return (
      <group ref={group} {...props} dispose={null}>
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}
               userData={{name: 'Sketchfab_model'}}>
          <group
              name="3bd38f4236234d35898f64206f3b32d3fbx"
              rotation={[Math.PI / 2, 0, 0]}
              scale={0.01}
              userData={{name: '3bd38f4236234d35898f64206f3b32d3.fbx'}}>
            <group name="Object_2" userData={{name: 'Object_2'}}>
              <group name="RootNode" userData={{name: 'RootNode'}}>
                <group
                    name="M_MED_Parallel_Comic_LOD0ao"
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={100}
                    userData={{name: 'M_MED_Parallel_Comic_LOD0.ao'}}>
                  <group name="Object_5" userData={{name: 'Object_5'}}>
                    <primitive object={nodes._rootJoint}/>
                    <skinnedMesh
                        name="Object_158"
                        geometry={nodes.Object_158.geometry}
                        material={materials.M_MED_Parallel_Comic_Body}
                        skeleton={nodes.Object_158.skeleton}
                        userData={{name: 'Object_158'}}
                    />
                    <skinnedMesh
                        name="Object_159"
                        geometry={nodes.Object_159.geometry}
                        material={materials.M_MED_Parallel_Comic_Head}
                        skeleton={nodes.Object_159.skeleton}
                        userData={{name: 'Object_159'}}
                    />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
  )
}

useGLTF.preload(PATH_TO_MODEL)
